{"version":3,"sources":["../static/js/3.46f6b4b4.chunk.js","docs/zh-cn/slot.md"],"names":["webpackJsonp","73","module","exports"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,GCHxBD,EAAOC,QAAU","file":"static/js/3.46f6b4b4.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 73:\n/***/ (function(module, exports) {\n\nmodule.exports = \"## Slot 插槽\\n\\n这里以 Omiu 里的 button 为例子来说明 slot。\\n\\n```html\\n<o-button>我是按钮文本</o-button>\\n```\\n\\n来看源码:\\n\\n```jsx {19-19}\\n@tag('o-button')\\nexport default class Button extends WeElement {\\n  ...\\n  ...\\n  ...\\n  \\n  render(props) {\\n\\n    return <button disabled={props.disabled} {...extractClass(props, 'o-button', {\\n      ['o-button-' + props.type]: props.type,\\n      ['o-button-' + props.size]: props.size,\\n      'is-plain': props.plain,\\n      'is-round': props.round,\\n      'is-circle': props.circle,\\n      'is-disabled': props.disabled,\\n      'is-block': props.block\\n    })}>\\n      {props.text}\\n      <slot></slot>\\n    </button>\\n  }\\n}\\n```\\n\\n那么为什么有了插槽还需要 `props.text`? 这是由于如果在使用自定义标签之后再引入相关的 js，插槽内的内容会直接显示在页面当中，带来不好的用户体验，所以如果你不能提前引入自定义组件的 js，你可以使用下面的方式达到同样的效果且避免的以上问题：\\n\\n\\n```html\\n<o-button text=\\\"我是按钮文本\\\"></o-button>\\n```\\n\\n### 具名插槽\\n\\n具名插槽可以指定插入的位置：\\n\\n```html\\n<o-el>\\n  <span slot=\\\"abc\\\"></span>\\n  <span slot=\\\"def\\\"></span>\\n</o-el>\\n```\\n\\n对应的组件定义:\\n\\n\\n```jsx {6-6,8-8}\\n@tag('o-el')\\nexport default class Button extends WeElement {\\n  \\n  render(props) {\\n    return <div>\\n      <slot name=\\\"abc\\\"></slot>\\n      <div>Some Info</div>\\n      <slot name=\\\"def\\\"></slot>\\n    </div>\\n  }\\n}\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/3.46f6b4b4.chunk.js","module.exports = \"## Slot 插槽\\n\\n这里以 Omiu 里的 button 为例子来说明 slot。\\n\\n```html\\n<o-button>我是按钮文本</o-button>\\n```\\n\\n来看源码:\\n\\n```jsx {19-19}\\n@tag('o-button')\\nexport default class Button extends WeElement {\\n  ...\\n  ...\\n  ...\\n  \\n  render(props) {\\n\\n    return <button disabled={props.disabled} {...extractClass(props, 'o-button', {\\n      ['o-button-' + props.type]: props.type,\\n      ['o-button-' + props.size]: props.size,\\n      'is-plain': props.plain,\\n      'is-round': props.round,\\n      'is-circle': props.circle,\\n      'is-disabled': props.disabled,\\n      'is-block': props.block\\n    })}>\\n      {props.text}\\n      <slot></slot>\\n    </button>\\n  }\\n}\\n```\\n\\n那么为什么有了插槽还需要 `props.text`? 这是由于如果在使用自定义标签之后再引入相关的 js，插槽内的内容会直接显示在页面当中，带来不好的用户体验，所以如果你不能提前引入自定义组件的 js，你可以使用下面的方式达到同样的效果且避免的以上问题：\\n\\n\\n```html\\n<o-button text=\\\"我是按钮文本\\\"></o-button>\\n```\\n\\n### 具名插槽\\n\\n具名插槽可以指定插入的位置：\\n\\n```html\\n<o-el>\\n  <span slot=\\\"abc\\\"></span>\\n  <span slot=\\\"def\\\"></span>\\n</o-el>\\n```\\n\\n对应的组件定义:\\n\\n\\n```jsx {6-6,8-8}\\n@tag('o-el')\\nexport default class Button extends WeElement {\\n  \\n  render(props) {\\n    return <div>\\n      <slot name=\\\"abc\\\"></slot>\\n      <div>Some Info</div>\\n      <slot name=\\\"def\\\"></slot>\\n    </div>\\n  }\\n}\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/docs/zh-cn/slot.md\n// module id = 73\n// module chunks = 3"],"sourceRoot":""}