@use "sass:map";

@import '../../common/scss/theme.scss';

$--button-padding: () !default;
$--button-padding: map.merge(
    (
      'medium': 10px 20px,
      'small': 9px 15px,
      'mini': 7px 15px,
    ),
    $--button-padding
);

$--button-font-size: () !default;
$--button-font-size: map.merge(
    (
      'medium': 14px,
      'small': 12px,
      'mini': 12px,
    ),
    $--button-font-size
);

$--button-border-radius: () !default;
$--button-border-radius: map.merge(
    (
      'medium': 4px,
      'small': 3px,
      'mini': 3px,
    ),
    $--button-border-radius
);

:host {
  display: inline-block;
}

:host([block]) {
  display: block;
}

.o-button {
  display: inline-block;
  line-height: 1;
  white-space: nowrap;
  cursor: pointer;
  background:$o-bg-color-container;
  border: 1px solid #dcdfe6;
  color: $o-icon-color-primary;
  -webkit-appearance: none;
  text-align: center;
  box-sizing: border-box;
  outline: none;
  margin: 0;
  transition: 0.1s;
  font-weight: 500;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  padding: 12px 20px;
  font-size: 14px;
  border-radius: 4px;

  &:hover {
    border-color: $o-primary-fade-some;
    border-color: var(--o-primary-fade-some, $o-primary-fade-some);
    color: $o-primary;
    color: var(--o-primary, $o-primary);
    background-color: $o-primary-fade-lot;
    background-color: var(--o-primary-fade-lot, $o-primary-fade-lot);
  }

  &:active {
    color: $o-primary;
    color: var(--o-primary, $o-primary);
    border-color: $o-primary;
    border-color: var(--o-primary, $o-primary);
    outline: none;
  }

  @each $size in $--sizes {
    &-#{$size} {
      padding: map.get($--button-padding, $size);
      font-size: map.get($--button-font-size, $size);
      border-radius: map.get($--button-border-radius, $size);
    }
  }

  &.is-round {
    border-radius: 20px;
  }

  &.is-circle {
    border-radius: 20px;
    padding: 12px;
  }

  &.is-disabled,
  &.is-disabled:focus,
  &.is-disabled:hover {
    color: #c0c4cc;
    cursor: not-allowed;
    background-image: none;
    background-color: #fff;
    border-color: #ebeef5;
  }

  &.is-block {
    display: block;
    width: 100%;
  }

  @each $type in $--types {
    &-#{$type} {
      color: #fff;
      background-color: var(--o-#{$type}, map.get($--colors, $type, 'base'));
      border-color: var(--o-#{$type}, map.get($--colors, $type, 'base'));

      &:disabled,
      &:disabled:hover {
        background-color: var(
            --o-#{$type}-fade-lot,
            map.get($--colors, $type, 'fade-lot')
        );
      }
    }

    &-#{$type}.is-plain {
      color: var(--o-#{$type}, map.get($--colors, $type, 'base'));
      background-color: var(
          --o-#{$type}-fade-lot,
          map.get($--colors, $type, 'fade-lot')
      );
      border-color: var(
          --o-#{$type}-fade-some,
          map.get($--colors, $type, 'fade-some')
      );
    }

    &-#{$type}:hover {
      background-color: var(
          --o-#{$type}-fade-little,
          map.get($--colors, $type, 'fade-little')
      );
      border-color: var(
          --o-#{$type}-fade-little,
          map.get($--colors, $type, 'fade-little')
      );
      color: #fff;
    }

    &-#{$type}:active {
      background-color: var(
          --o-#{$type}-active,
          map.get($--colors, $type, 'active')
      );
      border-color: var(
          --o-#{$type}-active,
          map.get($--colors, $type, 'active')
      );
      color: #fff;
    }
  }
}

.loading {
  width: 1em;
  height: 1em;
  display: inline-block;
  animation: loading 1s steps(12, end) infinite;
  vertical-align: -0.125em;
}

@-webkit-keyframes loading {
  0% {
    transform: rotate3d(0, 0, 1, 0deg);
  }

  100% {
    transform: rotate3d(0, 0, 1, 360deg);
  }
}

@keyframes loading {
  0% {
    transform: rotate3d(0, 0, 1, 0deg);
  }

  100% {
    transform: rotate3d(0, 0, 1, 360deg);
  }
}
