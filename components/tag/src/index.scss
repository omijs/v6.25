@use "sass:map";
@use "sass:math";

@import '../../common/scss/theme.scss';

$--tag-height: () !default;
$--tag-height: map.merge(('medium': 28px,
    'small': 24px,
    'mini': 20px),
  $--tag-height);

$--tag-padding: () !default;
$--tag-padding: map.merge(('medium': 0 10px,
    'small': 0 8px,
    'mini': 0 5px),
  $--tag-padding);

.o-tag {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;

  height: 30px;
  line-height: 28px;
  font-size: 12px;

  padding: 0 12px;
  margin: 0.5rem;

  color: #333;
  border: 1px solid #999;
  border-radius: 2px;

  background-color: #fcfcfc;

  // animation: tag-fade 0.2s ease-in;

  &.is-disabled {
    color: #999;
    border-color: transparent;
  }

  &--suffix {
    cursor: pointer;
    transform: translateX(30px, 6);
  }

  opacity: 1;
  transition: all 0.2s ease-in;

  &.is-closed {
    transform: translateX(15px);
    opacity: 0;
  }

  @each $type in $--types {
    &--#{$type} {
      border: 1px solid map.get($--colors, $type, 'base');
      background-color: rgba(map.get($--colors, $type, 'base'), 0.1);
      color: map.get($--colors, $type, 'base');

      &.is-disabled {
        color: rgba(map.get($--colors, $type, 'base'), 0.7);
      }
    }
  }

  @each $size in $--sizes {
    &--#{$size} {
      height: map.get($--tag-height, $size);
      padding: map.get($--tag-padding, $size);
      line-height: map.get($--tag-height, $size) - 2px;
    }

    &--suffix {
      transform: translateX(math.div(map.get($--tag-height, $size), 8));
    }
  }
}

// @keyframes tag-fade {
//   from {
//     transform: scale(0.1);
//     opacity: 0;
//   }
//   to {
//     opacity: 1;
//   }
// }